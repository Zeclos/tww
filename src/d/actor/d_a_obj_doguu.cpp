//
// Generated by dtk
// Translation Unit: d_a_obj_doguu.cpp
//

#include "d/actor/d_a_obj_doguu.h"
#include "d/d_procname.h"
#include "d/d_com_inf_game.h"
#include "d/d_item.h"
#include "d/res/res_doguu.h"
#include "d/actor/d_a_player.h"


const int daObjDoguu_idx_table[18] = {
    DOGUU_BMT_VGSMD, DOGUU_BMT_VGSMF, DOGUU_BMT_VGSMN,
    DOGUU_BMT_VGSBD, DOGUU_BMT_VGSBF, DOGUU_BMT_VGSBN,
    DOGUU_BCK_VGSHD, DOGUU_BCK_VGSHF, DOGUU_BCK_VGSHN,
    DOGUU_BRK_VGSMD, DOGUU_BRK_VGSMF, DOGUU_BRK_VGSMN,
    DOGUU_BDL_VGSHD, DOGUU_BDL_VGSHF, DOGUU_BDL_VGSHN,
    DOGUU_BDL_VGSPD, DOGUU_BDL_VGSPF, DOGUU_BDL_VGSPN
};


namespace {
    struct Attr_c {
        /* 0x00 */ float field_0x00;
        /* 0x04 */ float mEyepos;
    };

    static const Attr_c L_attr = {
        0.5f, 125.0f,
    };

    inline const Attr_c& attr() { return L_attr; }
}
static const s16 light_color[3][3] = {
    {0x00C8, 0x0032, 0x0032},
    {0x0032, 0x00C8, 0x0032},
    {0x0032, 0x0032, 0x00C8},
};





/* 00000078-00000168       .text setPointLight__12daObjDoguu_cFv */
void daObjDoguu_c::setPointLight() {
    cLib_addCalc2(&field_0x8FC, cM_rndF(0.1f)+ 1.0f,0.5f,0.05f);
    field_0x8DC.mPos = field_0x8D0;
    field_0x8DC.mColor.r = light_color[field_0x894][0];
    field_0x8DC.mColor.g = light_color[field_0x894][1];
    field_0x8DC.mColor.b = light_color[field_0x894][2];
    field_0x8DC.mPower = (s16)(field_0x8FC * 300.0f);
    field_0x8DC.mFluctuation = 100.0f;
}

/* 00000168-00000188       .text CheckCreateHeap__FP10fopAc_ac_c */
static BOOL CheckCreateHeap(fopAc_ac_c* i_this) {
    return static_cast<daObjDoguu_c*>(i_this)->CreateHeap();
}

/* 00000188-000007D0       .text CreateHeap__12daObjDoguu_cFv */
BOOL daObjDoguu_c::CreateHeap() {
    J3DModelData* modelData = (J3DModelData*)dComIfG_getObjectRes("Doguu", DOGUU_BDL_VGSMA);
    JUT_ASSERT(0x160, modelData != NULL);
    J3DMaterialTable* bmt = (J3DMaterialTable*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
    modelData->setMaterialTable(bmt, J3DMatCopyFlag_All);
    field_0x6CC = mDoExt_J3DModel__create(modelData, 0x80000,0x15220202);

    int uVar5;
    if(field_0x6CC == NULL) {
        uVar5 = 0;
    } else{
        J3DAnmTevRegKey* brk_doguu = (J3DAnmTevRegKey *)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
        JUT_ASSERT(0x170, brk_doguu != NULL);
        int iVar7;
        iVar7 = mBrk.init(modelData, brk_doguu, true, J3DFrameCtrl::EMode_LOOP, 1.0f, 0, -1, false, 0);
        if(iVar7 == 0) {
            uVar5 = 0;
        } else{
            J3DSkinDeform* deform = new J3DSkinDeform();
            if(deform = NULL) {
                uVar5 = 0; // could be wrong
            } else {
                field_0x6D0->setSkinDeform(deform, 1);
                modelData = (J3DModelData*)dComIfG_getObjectRes("Doguu", DOGUU_BDL_VGSMA);
                JUT_ASSERT(0x177, modelData != NULL);

                field_0x6D0 = mDoExt_J3DModel__create(modelData, 0,0x11020203);
                if (field_0x6D0 == NULL) {
                  uVar5 = 0;
                } else {
                    J3DAnmTransform* bck_head = (J3DAnmTransform *)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
                    JUT_ASSERT(0x17D, bck_head != NULL);
                    iVar7 = mBck1.init(modelData, bck_head, true, J3DFrameCtrl::EMode_NONE, 1.0f, 0, -1, false);
                    if(iVar7 == 0) {
                        uVar5 = 0;
                    } else {
                        deform = new J3DSkinDeform();
                        if (deform != NULL) {
                            field_0x6D0->setSkinDeform(deform, 1);
                            modelData = (J3DModelData*)dComIfG_getObjectRes("Doguu", DOGUU_BDL_VGSMA);
                            JUT_ASSERT(0x1C3, modelData != NULL); // the 0x1C3 maybe just wrong
                            bmt = (J3DMaterialTable*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
                            modelData->setMaterialTable(bmt, J3DMatCopyFlag_All);
                            field_0x6D4 = mDoExt_J3DModel__create(modelData, 0x80000,0x15220202);
                            if (field_0x6D4 == NULL) {
                                JUTNameTab* nameTable = field_0x6D4->getModelData()->getJointName();
                                short iVar9 = 0;
                                while (true) {
                                    if (field_0x6D4->getModelData()->getJointNum() <= iVar9) {
                                        break;
                                    }
                                    char* name = (char*)nameTable->getName(iVar9);
                                    iVar7 = strcmp(name, name); // prob wrong
                                    if (iVar7 == 0) {
                                        *(uint*)&field_0x898 = (uint)iVar9; // prob wrong
                                        break;
                                    }
                                    iVar9++;
                                }
                                bck_head = (J3DAnmTransform*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
                                JUT_ASSERT(0x17D, bck_head != NULL);
                                iVar7 = mBck2.init(modelData, bck_head, true, J3DFrameCtrl::EMode_NONE, 1.0f, 0, -1, false);
                                if (iVar7 == 0) {
                                    uVar5 = 0;
                                } else {
                                    deform = new J3DSkinDeform();
                                    if (deform != NULL) {
                                        field_0x6D4->setSkinDeform(deform, 1);
                                        modelData = (J3DModelData*)dComIfG_getObjectRes("Doguu", DOGUU_BDL_VGSMA);
                                        JUT_ASSERT(0x1BD, modelData != NULL);
                                        field_0x6D8 = mDoExt_J3DModel__create(modelData, 0, 0x11020203);
                                        if (field_0x6D8 == NULL) {
                                            bck_head = (J3DAnmTransform*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
                                            JUT_ASSERT(0x1C3, bck_head != NULL);
                                            iVar7 = mBck3.init(modelData, bck_head, true, J3DFrameCtrl::EMode_NONE, 1.0f, 0, -1, false);
                                            if (iVar7 == 0) {
                                                uVar5 = 0;
                                            } else {
                                                field_0x89C = 1;
                                                uVar5 = 1;
                                            }
                                        } else {
                                            uVar5 = 0;
                                        }
                                    } else {
                                        uVar5 = 0; // could be wrong
                                    }
                                }
                            } else {
                                uVar5 = 0;
                            }
                        } else{
                            uVar5 = 0; // could be wrong
                        }
                    }
                }
            
            }
        }
    }
    return uVar5;
    /* Nonmatching */
}

/* 000007D0-00000B80       .text CreateInit__12daObjDoguu_cFv */
void daObjDoguu_c::CreateInit() {
    static dCcD_SrcCyl l_cyl_src = {
        // dCcD_SrcGObjInf
        {
            /* Flags             */ 0,
            /* SrcObjAt  Type    */ 0,
            /* SrcObjAt  Atp     */ 0,
            /* SrcObjAt  SPrm    */ 0,
            /* SrcObjTg  Type    */ 0,
            /* SrcObjTg  SPrm    */ 0,
            /* SrcObjCo  SPrm    */ cCcD_CoSPrm_Set_e | cCcD_CoSPrm_IsOther_e | cCcD_CoSPrm_VsEnemy_e,
            /* SrcGObjAt Se      */ 0,
            /* SrcGObjAt HitMark */ 0,
            /* SrcGObjAt Spl     */ 0,
            /* SrcGObjAt Mtrl    */ 0,
            /* SrcGObjAt SPrm    */ 0,
            /* SrcGObjTg Se      */ 0,
            /* SrcGObjTg HitMark */ 0,
            /* SrcGObjTg Spl     */ 0,
            /* SrcGObjTg Mtrl    */ 0,
            /* SrcGObjTg SPrm    */ cCcD_TgSPrm_IsPlayer_e,
            /* SrcGObjCo SPrm    */ 0,
        },
        // cCcD_SrcCylAttr
        {
            /* Center */ 0.0f, 0.0f, 0.0f,
            /* Radius */ 200.0f,
            /* Height */ 200.0f,
        }
    };

    cullMtx = field_0x6CC->getBaseTRMtx();
    fopAcM_setCullSizeBox(this, -600.0f, -0.0f, -600.0f, 600.0f, 400.0f, 600.0f);
    fopAcM_setCullSizeFar(this, 1.0f);
    if (field_0x894 == 0){
        field_0x890 = 106;
    } else if(field_0x894 == 1) {
        field_0x890 = 107;
    } else{
        field_0x890 = 105;
    }
    mStts.Init(0xff, 0xff, this);
    mCyl.Set(l_cyl_src);
    if(!checkItemGet(field_0x890, 1)){
        mCyl.SetR(50.f);
    }
    mCyl.SetStts(&mStts);
    dKy_plight_set(&field_0x8DC);
    if (subtype >= 1) {
        mBck1.setFrame(mBck1.getEndFrame());
        mBck2.setFrame(mBck2.getEndFrame());
        mBck3.setFrame(mBck3.getEndFrame());
        field_0x8A0 = true;
        field_0x8A1 = false;
        field_0x8A2 = true;
        field_0x8AC = 14;
    } else {
        int eventBit = dComIfGs_isEventBit(0x1480);
        if ((eventBit != false) && (eventBit = dComIfGs_isEventBit(0x1440),
            eventBit != 0) && (eventBit = dComIfGs_isEventBit(0x1410),
            eventBit != 0)) {
        
            mBck1.setFrame(mBck1.getEndFrame());
            mBck2.setFrame(mBck2.getEndFrame());
            mBck3.setFrame(mBck3.getEndFrame());
            field_0x8A0 = true;
            field_0x8A1 = true;
            field_0x8A2 = false;
            field_0x8AC = 14;
        
        } else {
            field_0x8A1 = false;
            if (((field_0x894 == 0) && (eventBit = dComIfGs_isEventBit(0x1480), eventBit != 0)) ||
            (field_0x894 == 1 && (eventBit = dComIfGs_isEventBit(0x1440),
             eventBit != 0)) || (field_0x894 == 2 && (eventBit = dComIfGs_isEventBit(0x1410),
             eventBit != 0))){
                field_0x8A2 = true;
                field_0x8A0 = true;
                field_0x8AC = 10;                   
             }
             else {
                field_0x8A2 = false;
                field_0x8A0 = false;
                field_0x8AC = 0;
             }
        }
    }
    eyePos.y += attr().mEyepos;
    set_mtx();

    field_0x8A4 = dComIfGp_evmng_getEventIdx("DOGUU_DEMO1", 0xff);
    field_0x8A6 = dComIfGp_evmng_getEventIdx("DOGUU_DEMO2", 0xff);
    field_0x8A8 = dComIfGp_evmng_getEventIdx("DOGUU_DEMO3", 0xff);
    field_0x8AA = dComIfGp_evmng_getEventIdx("MEGAMI_DEMO", 0xff);
    field_0x8FC = 1.0f;
    if (!field_0x8A0) {
        field_0x8A3 = 1;
      }
      else {
        field_0x8A3 = 0;
      }
      field_0x8C8 = 1.0;
    /* Nonmatching */
}

/* 00000B80-00000CEC       .text set_mtx__12daObjDoguu_cFv */
void daObjDoguu_c::set_mtx() {
    field_0x6CC->setBaseScale(scale);
    field_0x6D4->setBaseScale(scale);
    field_0x6D8->setBaseScale(scale);
    field_0x6D0->setBaseScale(scale);

    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(current.angle.y);
    field_0x6CC->setBaseTRMtx(mDoMtx_stack_c::get());

    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(current.angle.y);
    field_0x6D4->setBaseTRMtx(mDoMtx_stack_c::get());

    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(current.angle.y);
    field_0x6D8->setBaseTRMtx(mDoMtx_stack_c::get());

    field_0x6D0->setBaseTRMtx(field_0x6D4->getAnmMtx(field_0x898));
}

/* 00000CEC-00000D80       .text next_msgStatus__12daObjDoguu_cFPUl */
void daObjDoguu_c::next_msgStatus(unsigned long*) {
    
    /* Nonmatching */
}

/* 00000D80-00000DBC       .text getMsg__12daObjDoguu_cFv */
void daObjDoguu_c::getMsg() {
    // if (this->field_0x8b0 == '\x04') {
    //     return 0xeed;
    //   }
    //   if (this->field1137_0x894 == 0) {
    //     return 0xeee;
    //   }
    //   return 0xef0 - (uint)(this->field1137_0x894 == 1);
    /* Nonmatching */
}

/* 00000DBC-00000E98       .text setGoal__12daObjDoguu_cFi */
void daObjDoguu_c::setGoal(int i_staffIdx) {
    cXyz pos = *dComIfGp_evmng_getMyXyzP(i_staffIdx, "Posion");

    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(current.angle.y);
    mDoMtx_stack_c::transM(pos.x, pos.y,  pos.z);

    mDoMtx_multVecZero(mDoMtx_stack_c::get(), &pos);
    field_0x8B4 = pos;
    dComIfGp_evmng_setGoal(&field_0x8B4);
    /* Nonmatching */
}

/* 00000E98-00000F18       .text setPlayerAngle__12daObjDoguu_cFi */
void daObjDoguu_c::setPlayerAngle(int i_staffIdx) {
    cXyz pos = *dComIfGp_evmng_getMyXyzP(i_staffIdx, "angle");
    /* Nonmatching */
}

/* 00000F18-00000FB8       .text setQuake__12daObjDoguu_cFi */
void daObjDoguu_c::setQuake(int i_staffIdx) {
    // u8 temp[4] = {0x00, 0x10, 0xFF, 0xEE}; // Doesn't match
    u32 temp2 = 0x0010FFEE;
    u8* temp = (u8*)&temp2;
    dComIfGp_getVibration().StartQuake(temp, 0, 63, cXyz(0.0f, 1.0f, 0.0f));

    field_0x8C0 = (int)dComIfGp_evmng_getMyXyzP(i_staffIdx, "Timer");
    /* Nonmatching */
}

/* 00000FB8-0000100C       .text setJDemo__12daObjDoguu_cFi */
void daObjDoguu_c::setJDemo(int) {
    dComIfGp_setNextStage("ADMumi", (short)field_0x894, 0, 8);

    /* Nonmatching */
}

/* 0000100C-000015A8       .text privateCut__12daObjDoguu_cFv */
void daObjDoguu_c::privateCut() {
    static char* cut_name_tbl[] = {
        "SETGOAL",
        "SETBALL",
        "SETANGLE",
        "EYEFLASH",
        "MESSAGE_KOKOE",
        "MESSAGE_OITA",
        "QUAKE",
        "JDEMO",
        "SETLIGHT",
        
    };
    short sVar3;

    int staffIdx = dComIfGp_evmng_getMyStaffId("DOGUU");
    if (staffIdx != -1) {
        mActIdx = dComIfGp_evmng_getMyActIdx(staffIdx, cut_name_tbl, ARRAY_SIZE(cut_name_tbl), TRUE, 0);
        if(mActIdx == -1) {
            dComIfGp_evmng_cutEnd(staffIdx);
        } else{
            bool idk = false;
            if (dComIfGp_evmng_getIsAddvance(staffIdx)) {
                switch (mActIdx) {
                case 0:
                    setGoal(staffIdx);
                    break;
                case 1:
                    field_0x8A0 = true;
                    fopAcM_seStartCurrent(this, JA_SE_LK_PUT_PEARL, 0);
                    break;
                case 2:
                    setPlayerAngle(staffIdx);
                    break;
                case 3:
                    field_0x8A2 = true;
                    break;
                //case 4 doesnt exist?
                case 5:
                    mDoAud_subBgmStart(JA_BGM_GET_PEARL); 
                    break;
                case 6:
                    setQuake(staffIdx);
                    break;
                case 7:
                    setJDemo(staffIdx);
                    break;
                case 8:
                    field_0x8C4 = 0;
                    break;
                default:
                    dComIfGp_evmng_cutEnd(staffIdx);
                }
            }
            switch (mActIdx) {
            case 0:
                idk = true;
                break;
            case 1:
                idk = true;
                break;
            case 2:
                idk = true;
                break;
            case 3:
                idk = true;
                break;
            case 4:
                // if (static_cast<fopNpc_npc_c*>(this)->talk(1) == 0x12) {
                //     idk = true;
                // }
                break;
            case 5:
                // if (talk(1) == 0x12) {
                //     idk = true;
                // }
                break;
            case 6:
                field_0x8C0 --;
                if (field_0x8C0 == 0) {
                  idk = true;
                  dComIfGp_getVibration().StopQuake(63);
                }
                break;
            case 7:
                idk= true;
                break;
            case 8:
                int iVar2 = field_0x8C4;
                if(iVar2 < 200){
                    field_0x8C4++;
                } else {
                    field_0x8C8 = 1.0f;
                }
                idk = iVar2 >= 200;
                iVar2 = field_0x8C4;
                if (iVar2 < 21) {
                    field_0x8C8 = 1.0 - (float)iVar2 * 0.01875;
                } else if (iVar2 < 41) {
                    field_0x8C8 = 0.625 - (float)(iVar2 + -0x14) * 0.0125;
                } else if (iVar2 < 0x61) {
                    field_0x8C8 = 0.375 - (float)(iVar2 + -0x28) * 0.00625;
                } else if ((iVar2 < 130) || (iVar2 > 149)) {
                    if ((iVar2 < 150) || (iVar2 > 169)) {
                      if ((iVar2 > 169) && (iVar2 < 191)) {
                        field_0x8C8 = (float)(iVar2 + -0xaa) * 0.01875 + 0.625;
                      }
                    } else {
                        field_0x8C8 = (float)(iVar2 + -0x96) * 0.0125 + 0.375;
                    }
                } else {
                    field_0x8C8 = (float)(iVar2 + -0x82) * 0.00625 + 0.25;
                }

                if (field_0x8C8 == 40) {
                    // (this->field1110_0x8d0).x = 0.0;
                    // (this->field1110_0x8d0).y = 0.0;
                    // (this->field1110_0x8d0).z = 0.0;
                    // mtx::PSMTXCopy(this->field1081_0x6d8->mpNodeMtx + this->field1094_0x89c,
                    //                &mDoMtx_stack_c::now);
                    // (this->field1110_0x8d0).x = mDoMtx_stack_c::now.m[0][3];
                    // (this->field1110_0x8d0).y = mDoMtx_stack_c::now.m[1][3];
                    // (this->field1110_0x8d0).z = mDoMtx_stack_c::now.m[2][3];
                    
                    if (field_0x894 == 0) {
                        dComIfGp_particle_set(dPa_name::ID_SCENE_8434, &field_0x8D0, &current.angle);
                    } else if (field_0x894 == 1) {
                        dComIfGp_particle_set(dPa_name::ID_SCENE_8436, &field_0x8D0, &current.angle);
                    } else {
                        dComIfGp_particle_set(dPa_name::ID_SCENE_8435, &field_0x8D0, &current.angle);
                    }
                } else if (field_0x8C4 == 125) {
                    field_0x8A3 = true;
                }
                break;
            default:
                idk = true;
            }
            if(idk){
                dComIfGp_evmng_cutEnd(staffIdx);
            } 
        }
    }
    /* Nonmatching */
}

/* 000015A8-00001630       .text getFinishEventCount__12daObjDoguu_cFv */
int daObjDoguu_c::getFinishEventCount() {
    int count = 0;
    if (dComIfGs_isEventBit(0x1480)) {
        count += 1;
    }
    if (dComIfGs_isEventBit(0x1440)) {
        count += 1;
    }
    if (dComIfGs_isEventBit(0x1410)) {
        count += 1;
    }
    return count;
    /* Nonmatching */
}


/* 00001630-000016A4       .text setFinishMyEvent__12daObjDoguu_cFv */
void daObjDoguu_c::setFinishMyEvent() {
    if (field_0x894 == 0) {
        dComIfGs_onEventBit(0x1480);
      }
      else if (field_0x894 == 1) {
        dComIfGs_onEventBit(0x1440);
      }
      else {
        dComIfGs_onEventBit(0x1410);
      }
      return;
    /* Nonmatching */
}

/* 000016A4-000016C4       .text daObjDoguu_Create__FPv */
static cPhs_State daObjDoguu_Create(void* i_this) {
    return static_cast<daObjDoguu_c*>(i_this)->_create();

}

daObjDoguu_c::daObjDoguu_c() {}

/* 000016C4-0000178C       .text _create__12daObjDoguu_cFv */
cPhs_State daObjDoguu_c::_create() {
    fopAcM_SetupActor(this, daObjDoguu_c);
    if(subtype >= 1) {
        field_0x894 = subtype - 1;
    } else {
        field_0x894 = fopAcM_GetParam(this) & 0xFF;
    }
    cPhs_State phase_state = dComIfG_resLoad(&mPhs,"Doguu");
    if (phase_state == cPhs_COMPLEATE_e) {
        if(!fopAcM_entrySolidHeap(this, CheckCreateHeap, 0)){
            return cPhs_ERROR_e;
        } else{
            CreateInit();
        }   
    }
    return phase_state;
    /* Nonmatching */
}

/* 00001CC8-00001D0C       .text daObjDoguu_Delete__FPv */
static BOOL daObjDoguu_Delete(void* i_this) {

    // dKy_plight_cut((daObjDoguu_c*)&i_this->field_0x8DC);
    // dComIfG_resDelete(&i_this->mPhs,"Doguu");
    // return 1;
    //something  like this
    /* Nonmatching */
}

/* 00001D0C-00001D30       .text daObjDoguu_Draw__FPv */
static BOOL daObjDoguu_Draw(void* i_this) {
    return static_cast<daObjDoguu_c*>(i_this)->_draw();

    /* Nonmatching */
}

/* 00001D30-00001F64       .text _draw__12daObjDoguu_cFv */
bool daObjDoguu_c::_draw() {
    g_env_light.settingTevStruct(TEV_TYPE_ACTOR, &current.pos, &tevStr);
    g_env_light.setLightTevColorType(field_0x6CC, &tevStr);
    g_env_light.setLightTevColorType(field_0x6D0, &tevStr);
    g_env_light.setLightTevColorType(field_0x6D4, &tevStr);
    g_env_light.setLightTevColorType(field_0x6D8, &tevStr);
    
    setEffectMtx(&eyePos, attr().field_0x00);

    if(field_0x8A1){
        J3DMaterialTable* bmt = (J3DMaterialTable*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
        
        field_0x6D0->getModelData()->setMaterialTable(bmt, J3DMatCopyFlag_All);
        mBck1.entry(field_0x6D0->getModelData());
        mDoExt_modelUpdateDL(field_0x6D0);
        field_0x6D0->getModelData()->getJointNodePointer(0)->setMtxCalc(NULL);

        mBck2.entry(field_0x6D4->getModelData());
        mDoExt_modelUpdateDL(field_0x6D4);
        field_0x6D4->getModelData()->getJointNodePointer(0)->setMtxCalc(NULL);
    } else {
        J3DMaterialTable* bmt = (J3DMaterialTable*)dComIfG_getObjectRes("Doguu", daObjDoguu_idx_table[field_0x894]);
        field_0x6CC->getModelData()->setMaterialTable(bmt, J3DMatCopyFlag_All);
        mBrk.entry(field_0x6CC->getModelData());
        mDoExt_modelUpdateDL(field_0x6CC);
        field_0x6CC->getModelData()->getMaterialTable().removeTevRegAnimator(mBrk.getBrkAnm());
    }
    if (field_0x8A0 == true) {
        mBck3.entry(field_0x6D8->getModelData());
        mDoExt_modelUpdateDL(field_0x6D8);
        field_0x6D8->getModelData()->getJointNodePointer(0)->setMtxCalc(NULL);       
    }
    return true;

    /* Nonmatching */
}

/* 00001F64-00002264       .text setEffectMtx__12daObjDoguu_cFPC4cXyzf */
void daObjDoguu_c::setEffectMtx(const cXyz*, float) {
    /* Nonmatching */
}

/* 00002264-00002288       .text daObjDoguu_Execute__FPv */
static BOOL daObjDoguu_Execute(void* i_this) {
    return static_cast<daObjDoguu_c*>(i_this)->_execute();
    /* Nonmatching */
}

/* 00002288-000027AC       .text _execute__12daObjDoguu_cFv */
bool daObjDoguu_c::_execute() {
    /* Nonmatching */
}

/* 000027AC-000027B4       .text daObjDoguu_IsDelete__FPv */
static BOOL daObjDoguu_IsDelete(void*) {
    return TRUE;
}

static actor_method_class daObj_DoguuMethodTable = {
    (process_method_func)daObjDoguu_Create,
    (process_method_func)daObjDoguu_Delete,
    (process_method_func)daObjDoguu_Execute,
    (process_method_func)daObjDoguu_IsDelete,
    (process_method_func)daObjDoguu_Draw,
};

actor_process_profile_definition g_profile_Obj_Doguu = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0007,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_Obj_Doguu,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daObjDoguu_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ 0x001E,
    /* Actor SubMtd */ &daObj_DoguuMethodTable,
    /* Status       */ fopAcStts_NOCULLEXEC_e | fopAcStts_CULL_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
